--[[
    Author:      Klamor
    Version:     1.0
    Release      Date: 
    Script:      Temple of Aminishi

   

]]

local API = require("api")
local UTILS = require("utils")

------------------------SCRIPT SETUP------------------------
local Leader_Name = ""                                      --Name of party leader
local Min_Eat_Percent = 60                                  --min HP% to start eating food
local Min_HP_Percent = 20                                   --min HP% to teleport out
local Use_Prayers_Percent = 20                              --min Pray% to activate prayers
local Min_AFK = 30000                                       --Minimum idle time in ms
local Max_AFK = 180000                                      --Maximum idle time in ms
------------------------END    SETUP------------------------
local ZONES = {
    START = WPOINT:new(0, 0, 0), --grab proper start point from dungeon chest coords +2....
    FIRST_CHECKPOINT = WPOINT:new(START.x + 20, START.y + 4, 0),
    FIRST_STAIRS_FIGHT = {
        TOP_LEFT = WPOINT:new(START.x + 27, START.y + 7, 0),
        BOT_RIGHT = WPOINT:new(START.x + 28, START.y + 1, 0)
    },
    RIGHT_SIDE_FIGHT = {
        TOP_LEFT = WPOINT:new(START.x + 27, START.y - 4, 0),
        BOT_RIGHT = WPOINT:new(START.x + 40, START.y - 11, 0)
    },
    LEFT_SIDE_FIGHT = {
        TOP_LEFT = WPOINT:new(START.x + 27, START.y + 19, 0),
        BOT_RIGHT = WPOINT:new(START.x + 40, START.y + 12, 0)
    },
    SECOND_STAIRS_FIGHT = {
        TOP_LEFT = WPOINT:new(START.x + 48, START.y + 13, 0),
        BOT_RIGHT = WPOINT:new(START.x + 57, START.y + 8, 0)
    },
    CATHEDRAL_OUTSIDE = {
        TOP_LEFT = WPOINT:new(START.x + 62, START.y + 19, 0),
        BOT_RIGHT = WPOINT:new(START.x + 71, START.y + 11, 0)
    },
    XIANG_MINIBOSS = {
        TOP_LEFT = WPOINT:new(START.x + 81, START.y + 10, 0),
        BOT_RIGHT = WPOINT:new(START.x + 85, START.y + 7, 0)
    },
    OLIVIA_MINIBOSS = {
        TOP_LEFT = WPOINT:new(START.x + 94, START.y + 8, 0),
        BOT_RIGHT = WPOINT:new(START.x + 100, START.y, 0)
    },
    CATHEDRAL_OUTSIDE_TWO = {
        TOP_LEFT = WPOINT:new(START.x + 78, START.y + 35, 0),
        BOT_RIGHT = WPOINT:new(START.x + 84, START.y + 24, 0)
    },
    OYU_MINIBOSS = {
        TOP_LEFT = WPOINT:new(START.x + 92, START.y + 35, 0),
        BOT_RIGHT = WPOINT:new(START.x + 96, START.y + 32, 0)
    },
    KITCHEN_OUTSIDE = {
        TOP_LEFT = WPOINT:new(START.x + 81, START.y - 2, 0),
        BOT_RIGHT = WPOINT:new(START.x + 93, START.y - 10, 0)
    },
    AHOEITU_MINIBOSS = {
        TOP_LEFT = WPOINT:new(START.x + 94, START.y - 19, 0),
        BOT_RIGHT = WPOINT:new(START.x + 99, START.y - 21, 0)
    },
    KITCHEN_OUTSIDE_TWO = {
        TOP_LEFT = WPOINT:new(START.x + 67, START.y - 12, 0),
        BOT_RIGHT = WPOINT:new(START.x + 65, START.y - 10, 0)
    },
    LAST_GROUP = {
        TOP_LEFT = WPOINT:new(START.x + 48, START.y + 1, 0),
        BOT_RIGHT = WPOINT:new(START.x + 61, START.y - 5, 0)
    },
    CATHEDRAL_INSIDE = {
        TOP_LEFT = WPOINT:new(),
        BOT_RIGHT = WPOINT:new()
    }
}
local ENEMIES = {
    Elite_Sotapanna = "Elite Sotapanna",
    Ahoeitu = "Ahoeitu the Chef",
    Olivia = "Olivia the Chronicler",
    Xiang = "Xiang the Water-shaper",
    Sarkhan = "Sarkhan the Serpentspeaker",
    Oyu = "Oyu the Quietest"
}
local TIMERS = {
    Script_Timer = API.SystemTime(),
    AFK_Timer = API.SystemTime()
}
local ITEMS = {
    CHARMS = {
        blue_charm = 12163,
        gold_charm = 12158,
        crimson_charm = 12160,
        green_charm = 12159
    },
    BONES = {
        bones = 17670,
        big_bones = 17674,
        dbones = 17676,
        frost_dbones = 18832,
        hardened_dbones = 35008,
        reinforced_dbones = 35010,
    },
    RUNES = {
        fire_rune = 554,
        water_rune = 555,
        air_rune = 556,
        earth_rune = 557,
        mind_rune = 558,
        body_rune = 559,
        death_rune = 560,
        nature_rune = 561,
        chaos_rune = 562,
        law_rune = 563,
        cosmic_rune = 564,
        blood_rune = 565,
        soul_rune = 566,
        pure_ess = 7936
    },
    RARES = {
        hard_clue_scroll = 42008,
    },
    AMMUNITION = {
        dragon_bolts = 9341,
        royal_bolts = 24336
    },
    MISC = {
        feather = 314,
        blue_dhide = 1751,
        black_dhide = 1747,
        gold = 995
    }
}
local BUFFS = {
    Powder_Of_Burials = 52805,
    Grace_Of_The_Elves = 51490,
    Super_Antifire = 30093,
    Overload = 26093
}
local DEBUFFS = {
    Poison = 14691,
    Elven_Shard = 43358,
    Enh_Excalibur = 14632
}
local PROTECT_MAGIC = {
    names = {"Olivia the Chronicler", "Oyu the Quietest"},
    BUFF_ID = 25959,
    SPELL_NAME = "Protect from Magic"
}
local PROTECT_MELEE = {
    names = {"Ahoeitu the Chef", "Xiang the Water-shaper", "Sarkhan the Serpentspeaker"},
    BUFF_ID = 25961,
    SPELL_NAME = "Protect from Melee"
}
local PROTECT_RANGED = {
    names = {},
    BUFF_ID = 25960,
    SPELL_NAME = "Protect from Ranged"
}
local PROTECT_NECRO = {
    names = {},
    BUFF_ID = nil, -- add this ID or it wont work
    SPELL_NAME = "Protect from Necromancy"
}
local SOUL_SPLIT = {
    names = {},
    BUFF_ID = nil, -- add this ID or it wont work
    SPELL_NAME = "Soul split"
}   

local PRAYER_TO_USE = nil
local currentTarget = nil

--UTILITIES
function terminate()
    API.logDebug("Shutting down...")
    runLoop = false
    API.Write_LoopyLoop(false)
end
function Check_Timer(int)
    return (API.SystemTime() - int)
end
function antiban()
    local elapsedTime = Check_Timer(TIMERS.AFK_Timer)
    local afkThreshold = math.random(Min_AFK, Max_AFK)
    if elapsedTime > afkThreshold then
        STATS.antibans = STATS.antibans + 1
        local eTime = tostring(math.floor(Check_Timer(TIMERS.AFK_Timer)/1000).."s")       
        local action = math.random(1, 7)
        if action == 1 then API.PIdle1()
        elseif action == 2 then API.PIdle2()
        elseif action == 3 then API.PIdle22()
        elseif action == 4 then API.KeyboardPress('w', 50, 250)
        elseif action == 5 then API.KeyboardPress('a', 50, 250)
        elseif action == 6 then API.KeyboardPress('s', 50, 250)
        elseif action == 7 then API.KeyboardPress('d', 50, 250)
        end
        TIMERS.AFK_Timer = API.SystemTime()
    end
end
function hasBuff(buff)
    if API.Buffbar_GetIDstatus(buff, false).id == 0 then
        return false
    else
        return true
    end
end
function hasDeBuff(debuff)
    if API.DeBuffbar_GetIDstatus(debuff, false).id == 0 then
        return false
    else
        return true
    end
end
function hasItem(item, count)
    invitems = API.InvItemcount_String()
    if count then return invitems end
    if invitems > 0 then
        return true
    else
        return false
    end
end
function getEnemies(names, size)
    local NPCs = {}
    if names then
        NPCs = API.ReadAllObjectsArray({1}, {-1}, names)
    else
        NPCs = API.ReadAllObjectsArray({1}, {-1}, {})
    end
    if size then
        return #NPCs    
    else
        return NPCs
    end
end
function findLeader()
    local obj = API.ReadAllObjectsArray({2}, {1}, {Leader_Name})
    if obj then
        return true
    else
        return false
    end
end
--[[
function MoveToLeader(direction)
    local leader = findLeader()

    if not (leader == nil) then

        local tile = leader.Tile_XYZ

        if direction == "N" then
            tile.y = (tile.y - 2)
        elseif direction == "S" then
            tile.y = (tile.y + 2)
        elseif direction == "E" then
            tile.x = (tile.x + 2)
        elseif direction == "W" then
            tile.x = (tile.x - 2)
        end

        API.DoAction_WalkerF(tile)

    end
end
function LeaderInRange(distance)

    local leader = findLeader()

    if math.floor(leader.Distance) <= distance then
        return true
    end 

    return false

end
]]
function PartyInRange(maxDistance)
    local players = API.ReadAllObjectsArray({2}, {1}, {}) 
    local myName = API.GetLocalPlayerName()
    for _, player in ipairs(players) do
        if player.Name ~= myName then
            if player.Distance > maxDistance then
                return false
            end
        end
    end
    return true
end
function EnemiesWithinLocation(enemy, location, return_table)
    local topLeft = location.top_left
    local botRight = location.bot_right
    local NPCs = getEnemies({enemy})
    local enemies = {}
    for i = 0, #NPCs do
        local objectPosition = NPCs[i].TILE_XYZ

        if objectPosition.x >= topLeft.x and objectPosition.x <= botRight.x and
        objectPosition.y <= topLeft.y and objectPosition.y >= botRight.y then
            table.insert(enemies, NPCs[i])
        end
    end
    if return_table then
        return enemies
    else
        return #enemies
    end
end
--UTILITIES

--PLAYERCHECKS
function buffCheck()
       
    if API.InvItemcount_String("Ancient elven ritual shard") > 0 then
        if not hasDeBuff(DEBUFFS.Elven_Shard) and (API.GetPrayPrecent() <= 63) then
            --API.DoAction_Interface(0x2e,0xa95e,1,1670,110,-1,API.OFF_ACT_GeneralInterface_route)
            activateAbility("Ancient elven ritual shard")
            API.RandomSleep2(600, 50, 300)
        end 
    end

    if API.InvItemcount_String("Enhanced Excalibur") > 0 then
        if not hasDeBuff(DEBUFFS.Enh_Excalibur) and (API.GetHPrecent() <= 80) then
            activateAbility("Enhanced Excalibur")
            API.RandomSleep2(600, 50, 300)
        end 
    end

    if API.InvItemcount_String("Overload") > 0 then
        if not hasBuff(BUFFS.Overload) then
            API.logDebug("Using Overloads")
            activateAbility("Overload potion")
            API.RandomSleep2(600, 50, 300)
        end
    end
    
end
function setupPrayers()

    if currentTarget == nil then
        return false
    else
        if UTILS.canUseSkill(PROTECT_MAGIC.SPELL_NAME) then
            for _, name in ipairs(PROTECT_MAGIC.names) do
                if name == currentTarget then
                    PRAYER_TO_USE = PROTECT_MAGIC
                    return true
                end
            end
        else 
            --API.logDebug(PROTECT_MAGIC.SPELL_NAME.." unavailable!")
        end
        if UTILS.canUseSkill(PROTECT_MELEE.SPELL_NAME) then
            for _, name in ipairs(PROTECT_MELEE.names) do
                if name == currentTarget then
                    PRAYER_TO_USE = PROTECT_MELEE
                    return true
                end
            end
        else
            --API.logDebug(PROTECT_MELEE.SPELL_NAME.." unavailable!")    
        end
        if UTILS.canUseSkill(PROTECT_RANGED.SPELL_NAME) then
            for _, name in ipairs(PROTECT_RANGED.names) do
                if name == currentTarget then
                    PRAYER_TO_USE = PROTECT_RANGED
                    return true
                end
            end
        else
            --API.logDebug(PROTECT_RANGED.SPELL_NAME.." unavailable!")
        end
        if UTILS.canUseSkill(PROTECT_NECRO.SPELL_NAME) then
            for _, name in ipairs(PROTECT_NECRO.names) do
                if name == currentTarget then
                    PRAYER_TO_USE = PROTECT_NECRO
                    return true
                end
            end
        else
            --API.logDebug(PROTECT_NECRO.SPELL_NAME.." unavailable!")    
        end
        if UTILS.canUseSkill(SOUL_SPLIT.SPELL_NAME) then
            PRAYER_TO_USE = SOUL_SPLIT
            return true
        else
            --API.logDebug(SOUL_SPLIT.SPELL_NAME.." unavailable!")
        end
    end
    return false
end
function prayerCheck()

    if PRAYER_TO_USE == nil then
        return
    end

    if API.IsTargeting() and not hasBuff(PRAYER_TO_USE.BUFF_ID) and (API.GetPrayPrecent() > Use_Prayers_Percent) then
        API.logDebug("In combat! Enabling protection prayers")
        activateAbility(PRAYER_TO_USE.SPELL_NAME)
        API.RandomSleep2(800, 50, 300)
    elseif (API.LocalPlayer_IsInCombat_() and  not API.IsTargeting()) and hasBuff(PRAYER_TO_USE.BUFF_ID) then
        API.logDebug("In combat w/o target! Disabling protection prayers")
        activateAbility(PRAYER_TO_USE.SPELL_NAME)
        API.RandomSleep2(800, 50, 300)
    elseif not API.LocalPlayer_IsInCombat_() and hasBuff(PRAYER_TO_USE.BUFF_ID) then
        API.logDebug("Out of Combat! Disabling protection prayers")
        activateAbility(PRAYER_TO_USE.SPELL_NAME)
        API.RandomSleep2(800, 50, 300)    
    end
end
function healthCheck()
    if API.GetHPrecent() < Min_Eat_Percent then
        if UTILS.canUseSkill("Eat Food") then
            API.logDebug("Low HP! Eating Food!")
            activateAbility("Eat Food")
            API.RandomSleep2(600, 50, 300)
            if API.GetHPrecent() > Min_Eat_Percent then
                return true
            end
        else
            API.logDebug("Can't use 'Eat Food' ability")
        end
    end
end
function chargePackCheck()
    local chatTexts = API.GatherEvents_chat_check()
    for _, v in ipairs(chatTexts) do
        if (string.find(v.text, "Your charge pack has run out of power")) then
            API.logWarn("Charge pack is empty!")
            emergencyTele()
            terminate()
            return false
        end
    end
    return true
end
function preCombatChecks()
    setupPrayers()
    chargePackCheck()
end
function combatChecks()
    buffCheck()
    prayerCheck()
    healthCheck()
end
--PLAYERCHECKS

--ABILITIES
function activateAbility(name)

    ---MUST BE ON ACTIONBARS 
    API.DoAction_Ability(name, 1, API.OFF_ACT_GeneralInterface_route)
    API.RandomSleep2(600, 50, 300)
end
function specialAttack()
    if UTILS.canUseSkill("Weapon Special Attack") then
        activateAbility("Weapon Special Attack")
        API.RandomSleep2(600, 0, 600)    
    end
end
function essenceOfFinality()
    if UTILS.canUseSkill("Essence of Finality") then
        activateAbility("Essence of Finality")
        API.RandomSleep2(600, 0, 600)    
    end
end
function rejuvenate()

    if  (API.GetAddreline_() < 94) or (API.GetHPrecent() > 80) or not (hasItem("shield", true) >= 1) or hasDeBuff(DEBUFFS.Enh_Excalibur) then
        return
    end

    local startHP = API.GetHPrecent()

    API.KeyboardPress('1', 50, 250)
    API.RandomSleep2(600, 0, 600)  

    if UTILS.canUseSkill("Rejuvenate") then
        activateAbility("Rejuvenate")
        API.RandomSleep2(600, 0, 600)
    end

    local skillTimer = API.SystemTime()

    while Check_Timer(skillTimer) < 10000 do
        API.RandomSleep2(600, 0, 600)
    end

    API.KeyboardPress('2', 50, 250)
    API.RandomSleep2(600, 0, 600)

end
--ABILITIES

--ZONE LOGIC
function inOrOut()
    local doorID = 111710
    local templeDoorID = 103952
    
    local inside, outside, foundDoor = false, false, false

    local door = API.ReadAllObjectsArray({0}, {doorID}, {})
    if door and #door == 1 then
        foundDoor = true
        inside = true
    end

    local templeDoor = API.ReadAllObjectsArray({0}, {templeDoorID}, {})
    if templeDoor and #templeDoor == 1 then
        foundDoor = true
        outside = true
    end

    if foundDoor and inside and not outside then
        return "inside"
    end

    if foundDoor and outside and not inside then
        return "outside"
    end
end
function enterDungeon()
    result = false
    if not inOrOut == "outside" then
        return result
    end

    local templeDoorID = 103952
    local doorFound = false

    local templeDoor = API.ReadAllObjectsArray({0}, {templeDoorID}, {})
    if templeDoor and #templeDoor == 1 then
        doorFound = true
    end
    
    if API.GetLocalPlayerName() == Leader_Name then
        --API.DoAction_Object_Direct(action, offset, templeDoor)
        --wait for dungeon reset window
        --reset dungeon
        --wait for story/normal window
        --normal mode
    else 
        while findLeader() do
            API.RandomSleep2(600, 0, 600)    
        end
        --API.DoAction_Object_Direct(action, offset, templeDoor)
    end

    while not inOrOut == "inside" do
        API.RandomSleep2(600, 0, 600)
    end
end
function setupCoordOffset()
    local chestID = 93017
    --offset chest coords to player start coords
    local objs = API.ReadAllObjectsArray({0}, {chestID}, {})
    if objs and #objs == 1 then
        ZONES.START = (objs[1].TILE_XYZ.x + 2, objs[1].TILE_XYZ.y - 2, 0) -- double check before running
    end
end
function dungeonStart()
    --everyone walks to start tile and waits for rest of party
    API.DoAction_WalkerW(ZONES.FIRST_CHECKPOINT)
    while not API.PlayerCoord() == ZONES.FIRST_CHECKPOINT do
        antiban()
        API.RandomSleep2(600, 0, 250)
    end
    while not PartyInRange(1) do
        antiban()
        API.RandomSleep2(600, 0, 250)
    end
    while EnemiesWithinLocation(ENEMIES.Elite_Sotapanna, FIRST_STAIRS_FIGHT) < 3 do
        antiban()
        API.RandomSleep2(600, 0, 250)
    end
    preCombatChecks()
end
function combatZone(zone)
    API.logDebug("Starting zone: "..tostring(zone))
    currentTarget = ENEMIES.Elite_Sotapanna
    while EnemiesWithinLocation(currentTarget, zone) > 0 do
        local npcsToFight = EnemiesWithinLocation(currentTarget, zone, true)
        for x = 1, #npcsToFight do
            API.DoAction_NPC__Direct(0x2a, API.OFF_ACT_AttackNPC_route, npcsToFight[x])
            API.RandomSleep2(600, 0, 250)
            while API.IsTargeting() do
                combatChecks()
                antiban()
                API.RandomSleep2(600, 0, 250)
            end
        end
    end
end
function bossZone(zone)
    boss = EnemiesWithinLocation({}, zone, true)
    currentTarget = boss.Name
    preCombatChecks()
    if boss and (#boss == 1) then
        API.DoAction_NPC__Direct(0x2a, API.OFF_ACT_AttackNPC_route, boss)
        API.RandomSleep2(600, 0, 250)
    end
    while API.IsTargeting() do
        combatChecks()
        antiban()
        API.RandomSleep2(600, 0, 250)
    end
end
function exitDungeon()
    local randomCoords = WPOINT:new(ZONES.START.x + math.random(-2.2), ZONES.START.y + math.random(-2,2),0)
    API.DoAction_WalkerW(randomCoords)
    
    local doorID = 111710

    local door = API.ReadAllObjectsArray({0}, {doorID}, {})
    if door and #door == 1 then
        while door.Distance > 10 and not PartyInRange(4) do
            antiban()
            API.RandomSleep2(600, 0, 250)
        end
        --API.DoAction_Object_Direct(action, offset, door)
    end

    while not inOrOut() == "outside" do
        API.RandomSleep2(600, 0, 250)
    end
    
end
--ZONE LOGIC

--main loop
API.Write_LoopyLoop(true)
API.SetDrawLogs(true)
API.SetDrawTrackedSkills(true)

while(API.Read_LoopyLoop())
do-----------------------------------------------------------------------------------



end----------------------------------------------------------------------------------